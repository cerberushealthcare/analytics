<?php
require_once 'php/data/rec/sql/_LookupRec.php';
//
/**
 * Lookup Templates
 * @author Warren Hornsby
 */
class LookupTemplates {
  //
  /**
   * @param int $tid
   * @return LuTemplateMap + LuSectionReorder
   */
  static function get($tid) {
    $map = LuTemplateMap::fetch($tid);
    $reorder = LuSectionReorder::fetch($tid);
    return new LuTemplate($map, $reorder);
  }
}
class LuTemplate extends Rec {
  //
  public $startSection;  // from LuTemplateMap
  public $main;
  public $auto;
  public $sort;          // from LuSectionReorder
  //
  public function __construct($map, $reorder) {
    if ($map) {
      $this->startSection = $map->startSection;
      $this->main = ($map->main) ? get_object_vars($map->main) : null;
      $this->auto = ($map->auto) ? get_object_vars($map->auto) : null;
    }
    if ($reorder) {
      $this->sort = ($reorder->sort) ? get_object_vars($reorder->sort) : null;
    }
  }
}
class LuTemplateMap extends LookupRec {
  //
  public $startSection;
  public $main;  // {'suid':['puid',..],..}
  public $auto;  // {'suid':['puid',..],..}
  //
  public function getLookupTable() {
    return 4;
  }
  //
  static function fetch($tid) {
    return parent::fetch(__CLASS__, $tid);
  }
}
class LuSectionReorder extends LookupRec {
  //
  public $sort;  // {'suid':'#.#',..}
  //
  public function getLookupTable() {
    return 16;
  }
  //
  static function fetch($tid) {
    $obj = self::fetchObject(__CLASS__, $tid);
    return self::from($obj);
  }
  static function from($obj) {
    $rec = new self();
    $rec->_id = get($obj, '_id');
    $rec->_level = $obj->_level;
    $rec->_instance = get($obj, '_instance');
    unset($obj->_id);
    unset($obj->_level);
    unset($obj->_instance);
    $rec->sort = $obj;
    return $rec;
  }
}
?>
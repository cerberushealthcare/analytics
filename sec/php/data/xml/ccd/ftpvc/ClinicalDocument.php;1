<?php
require_once 'php/data/xml/_XmlRec.php';
require_once 'php/data/xml/ccd/POCD_MT000040.php';
require_once 'php/data/xml/ccd/datatypes_base.php';
//
class ClinicalDocument extends XmlRec {
  public /*NullFlavor*/ $_nullFlavor;
  public /*ActClinicalDocument*/ $_classCode;
  public /*ActMood*/ $_moodCode;
  //
  public /*CS[]*/ $realmCode;
  public /*InfrastructureRoot_typeId*/ $typeId; //REQ
  public /*InfrastructureRoot_templateId[]*/ $templateId;
  public /*II*/ $id; //REQ
  public /*CE*/ $code; //REQ
  public /*ST*/ $title;
  public /*TS*/ $effectiveTime; //REQ
  public /*CE*/ $confidentialityCode; //REQ
  public /*CS*/ $languageCode;
  public /*II*/ $setId;
  public /*INT*/ $versionNumber;
  public /*TS*/ $copyTime;
  public /*RecordTarget[]*/ $recordTarget; //REQ
  public /*Author[]*/ $author; //REQ
  public /*DataEnterer*/ $dataEnterer;
  public /*Informant12[]*/ $informant;
  public /*Custodian*/ $custodian; //REQ
  public /*InformationRecipient[]*/ $informationRecipient;
  public /*LegalAuthenticator*/ $legalAuthenticator;
  public /*Authenticator[]*/ $authenticator;
  public /*Participant1[]*/ $participant;
  public /*InFulfillmentOf[]*/ $inFulfillmentOf;
  public /*DocumentationOf[]*/ $documentationOf;
  public /*RelatedDocument[]*/ $relatedDocument;
  public /*Authorization[]*/ $authorization;
  public /*Component1*/ $componentOf;
  public /*Component2*/ $component; //REQ
  //
  /**
   * Construct with required defaults
   */
  public function __construct() {
    $this->setNamespaces();
    $this->typeId = InfrastructureRoot_typeId::fromExtension('POCD_HD000040');
    $this->templateId = InfrastructureRoot_templateId::from('2.16.840.1.113883.10.20.1');
    $this->code = CE::asLoinc('34133-9', 'Summarization of episode note');
    $this->confidentialityCode = CE::asConfidentiality('N');
    $this->languageCode = CS::asUsEnglish(); 
    $this->effectiveTime = TS::fromNow();
    // TODO: is documentationOf a required element?
  }
  /**
   * Assign required header elements
   * @param string $id
   * @param string $title
   * @param Client $client
   * @param UserGroup $userGroup
   * @param ErxUser $user
   */
  public function setHeader($id, $title, $client, $userGroup, $user) {
    $this->id = II::from($id);
    $this->title = ST::asText($title);
    $this->recordTarget = RecordTarget::from($client, $userGroup);
    $this->author = Author::from($user, $userGroup);
    $this->custodian = Custodian::from($userGroup);
  }
  /**
   * Add participant
   * @param AssociatedEntity $entity
   */
  public function addParticipant($entity) {
    $this->set('participant', Participant1::fromAssociatedEntity($entity));
  }
  //
  private function setNamespaces() {
    $this->_xmlns = 'urn:hl7-org:v3';
    $this->_xmlns_voc = 'urn:hl7-org:v3/voc';
    $this->_xmlns_xsi = 'http://www.w3.org/2001/XMLSchema-instance';
    $this->_xsi_schemaLocation = 'urn:hl7-org:v3 CDA.xsd';
  }
}
?>
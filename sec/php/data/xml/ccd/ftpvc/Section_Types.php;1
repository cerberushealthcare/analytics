<?php
require_once 'php/data/xml/ccd/POCD_MT000040.php';
//
/**
 * Section types
 */
class Section_Meds extends POCD_Section {
  // 
  public function __construct($meds) {
    $this->templateId = InfrastructureRoot_templateId::asSectionMeds();
    $this->code = new CE_LOINC('10160-0', 'History of Medication Use');
    $this->title = ST::asText('Medication');
    $this->text = new Text_Meds($meds);
    $this->addEntries($meds);
  }
  //
  private function addEntries($meds) {
    foreach ($meds as $med) 
      $this->add(Entry::fromMed($med)); 
  }
}
class Section_Alerts extends POCD_Section {
  // 
  public function __construct($allers) {
    $this->templateId = InfrastructureRoot_templateId::asSectionAlerts();
    $this->code = new CE_LOINC('48765-2', 'Allergies, Adverse Reactions, Alerts');
    $this->title = ST::asText('Allergies and Adverse Reactions');
    $this->text = new Text_Allerts($allers);
    $this->addEntries($allers);
  }
  //
  private function addEntries($allers) {
    foreach ($allers as $aller) 
      $this->add(Entry::fromAller($aller)); 
  }
}
class Section_Problems extends POCD_Section {
  //
  public function __construct($code) {
    $this->templateId = InfrastructureRoot_templateId::asSectionProblems();
    $this->code = $code;
  }
}
/**
 * Text <table> definitions 
 */
class Text extends XmlRec {
  public $table;
  //
  protected static function denull($value, $with = '(None)') {
    return (empty($value)) ? $with : $value;
  }
}
class Text_Meds extends Text {
  //
  public function __construct($meds) {
    $this->table = new TextTable('Medication', 'Instructions', 'Date(s)', 'Status');
    foreach ($meds as $med)
      $this->table->add($med->name, $med->formatSig(), 'N/A', $med->formatActive());
  }
}
class Text_Allerts extends Text {
  //
  public function __construct($allers) {
    $this->table = new TextTable('Substance', 'Reactions', 'Status');
    if (empty($allers)) {
      $this->table->add('None Known');
      $this->table->tbody->tr[0]->td[0]->_colspan = 3; 
      print_r($this->table);
    } else {
      foreach ($allers as $aller)
        $this->table->add($aller->agent, self::denull($aller->formatReactions()), $aller->formatActive());
    }
  }
}
class TextTable extends XmlRec { 
  public $_border = '1';
  public $_width = '100%';
  //
  public $thead;
  public $tbody;
  //
  public function __construct() {
    $ths = func_get_args();
    $this->thead = new TextTableThead($ths);
    $this->tbody = new TextTableTbody();
  }
  public function add() {
    $tds = func_get_args();
    $this->tbody->add($tds);
  }
}
class TextTableThead extends XmlRec {
  public $tr;
  //
  public function __construct($ths) {
    $this->tr = new TextTableTheadTr($ths);
  }
}
class TextTableTheadTr extends XmlRec {
  public $th;
  //
  public function __construct($ths) {
    $this->th = $ths;
  }
}
class TextTableTbody extends XmlRec {
  public $tr;
  //
  public function __construct() {
    $this->tr = array();
  }
  public function add($tds) {
    $this->tr[] = new TextTableTbodyTr($tds);
  }
}
class TextTableTbodyTr extends XmlRec {
  public $td;
  //
  public function __construct($tds) {
    $this->td = array();
    foreach ($tds as $td) 
      $this->td[] = new TextTableTd($td); 
  }
}
class TextTableTd extends XmlRec {
  public $_;
  //
  public function __construct($td) {
    $this->_ = $td;
  }
}
?>
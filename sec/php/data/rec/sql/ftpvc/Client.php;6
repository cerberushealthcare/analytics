<?php
require_once 'php/data/rec/sql/_SqlRec.php';
/**
 * Client Record
 */
class Client extends SqlRec {
  //
  public $clientId;
  public $userGroupId;
  public $uid;
  public $lastName;
  public $firstName;
  public $sex;
  public $birth;
  public $img;
  public $dateCreated;
  public $active;
  public $cdata1;
  public $cdata2;
  public $cdata3;
  public $cdata4;
  public $cdata5;
  public $cdata6;
  public $cdata7;
  public $cdata8;
  public $cdata9;
  public $dateUpdated;
  //
  const SEX_MALE = 'M';
  const SEX_FEMALE = 'F';
  public static $SEXES = array(
    Client::SEX_MALE => 'Male',
    Client::SEX_FEMALE => "Female");
  //
  public function getSqlTable() {
    return 'clients';
  }
  public function toJsonObject() {
    $o = parent::toJsonObject();
    Rec::addDateProps($o, array('birth'));
    $o->_name = "$this->lastName, $this->firstName";
    return $o;
  }
  //
  /**
   * @param int $cid
   * @return Client
   */
  public static function fetch($cid) {
    if ($cid) 
      return SqlRec::fetch($cid, 'Client');
    else
      return null;
  }
  /**
   * @param string $uid
   * @return Client
   */
  public static function fetchByUid($uid) {
    $rec = new Client();
    $rec->uid = $uid;
    return SqlRec::fetchOneBy($rec);
  }
  /**
   * Search for potential matches 
   * @param string $last
   * @param string $first
   * @param(opt) string $dob
   * @param(opt) string $sex
   * @return array($cid=>Client,..)
   */
  public static function search($last, $first, $dob = null, $sex = null) {
    global $myLogin;
    $birth = SqlRec::formatSqlDate($dob);
    $matches = array();
    $rec = new Client();
    $rec->active = true;
//    $rec->userGroupId = $myLogin->userGroupId;
    $rec->lastName = $last;
    $rec->firstName = $first;
    $rec->sex = $sex;
    $rec->birth = $birth;
    if (Client::_search($matches, $rec) > 0)  // last, first, dob, sex
      return $matches;
    $rec->firstName = CriteriaValue::startsWith(substr($first, 0, 1));
    Client::_search($matches, $rec);  // last, first1%, dob, sex
    $rec->firstName = null;
    if (Client::_search($matches, $rec) > 0)  // last, dob, sex
      return $matches;
    $rec->lastName = null;
    if ($rec->birth) {
      $rec->birth = null;
      $rec->lastName = $last;
      $rec->firstName = $first;
      if (Client::_search($matches, $rec) > 0)  // last, first, sex
        return $matches;
      $rec->firstName = null;
      $rec->lastName = null;
      $rec->birth = $birth;
      Client::_search($matches, $rec);  // dob, sex
      $rec->birth = null;
      $rec->lastName = $last;
      $rec->firstName = CriteriaValue::startsWith(substr($first, 0, 1));
      Client::_search($matches, $rec);  // last, first1%, sex
      $rec->firstName = null;
      if (Client::_search($matches, $rec) > 0)  // last, sex
        return $matches;
    }
    $rec->lastName = CriteriaValue::startsWith(substr($last, 0, 4));
    $rec->firstName = $first;
    Client::_search($matches, $rec);  // last4%, first, sex
    $rec->firstName = null;
    Client::_search($matches, $rec);  // last4%, sex
    if (count($matches) == 0) {
      $rec->firstName = $first;
      $rec->lastName = CriteriaValue::startsWith(substr($last, 0, 1));
      Client::_search($matches, $rec);  // last1%, first, sex
      $rec->lastName = null;
      $rec->birth = null;
      Client::_search($matches, $rec);  // first, sex
    }
    return $matches;
  } 
  //
  private static function _search(&$matches, $rec) {
    $recs = SqlRec::fetchMapBy($rec, 10);
    $matches = $matches + $recs;
    return count($recs);
  }
}
?>
var C_ErxPharm;  
/**
 * ERX Pharm Page
 * Global static, instance assigned to global variable: page
 * @author Warren Hornsby
 */
var ErxPharmPage = {
  reqs:null,  // {renewalRequestGuid:ErxPharm,..}
  /*
   * Loader
   */
  load:function(query, cErxPharm) {
    C_ErxPharm = cErxPharm;
    Page.setEvents();
    showOverlayWorking('Contacting ePrescribing partner site');
    flicker('results-head');
    var self = this;
    Ajax.get(Ajax.SVR_ERX, 'getNewCropPharm', null,
      function(reqs) {
        self.reqs = reqs;
        self._load(reqs);
        closeOverlayWorking();
      });
  },
  pEdit:function(id) {
    var self = this;
    var req = this.reqs[id];
    overlayWorking(true);
    Ajax.post(Ajax.SVR_ERX, 'searchClients', req,
      function(clients) {
        overlayWorking(false);
        ErxPharmPop.pop(req, clients);
      });
  },
  pNewCrop:function() {
    var id = ClientTile.getSelected();
    var rxguid = ErxPharmPop.req.renewalRequestGuid;
    NewCrop.sendFromPharm(id, rxguid, function() {
      Header.ncRefreshStat();
      closeOverlayPop();
      clearChildren($('results-tbody'));
      page.load();
    });
  },
  //
  _load:function() {
    var t = new TableLoader('results-tbody', 'off', 'results-tbl', 'results-head');
    for (var id in this.reqs) {
      var rec = this.reqs[id];
      t.createTr();
      var a = createAnchor(null, 'javascript:page.pEdit("' + id + '")', 'action user', rec._name);
      t.createTdAppend('fs', a);
      t.createTd('nowrap', null, rec.receivedTimestamp + '<br/>' + rec.pharmacyStoreName);
      t.createTd(null, rec.drugInfo);
      t.createTd(null, rec.doctorFullName);
    }
  }
}
/**
 * Erx Pharm Pop
 */
var ErxPharmPop = {
  req:null,
  clients:null,
  //
  pop:function(req, clients) {
    overlayWorking(true);
    this.req = req;
    this.clients = clients;
    ClientTile.reset();
    this.load();
    showOverlayPop('pop-ep');
    overlayWorking(false);
  },
  load:function() {
    setText('rx-rcv', this.req._receivedTimestamp);
    setText('rx-from', this.req.pharmacyStoreName);
    setText('rx-patient', this.req._name);
    setText('rx-dob', this.req._patientDOB);
    setText('rx-sex', this.req.patientGender);
    setText('rx-med', this.req.drugInfo);
    setText('rx-qty', this.req.quantity);
    setText('rx-sig', this.req.sig);
    var t = new TableLoader('matches-tbody', 'off', 'matches-tbl', 'matches-head');
    for (var id in this.clients) {
      var c = this.clients[id];
      t.createTr();
      var a = ClientUi.createClientAnchor(c);
      a.href = 'javascript:ClientTile.loadClient(' + id + ')';
      t.createTdAppend('nowrap', a);
      t.createTd(null, c._birth);
      t.createTd(null, c.uid);
    }
    t.createTr();
    var text = (id) ? 'Search for another patient...' : 'No match found. Search for a patient...';
    var a = createAnchor(null, 'javascript:ClientTile.popClientPicker()', 'icon view2', text);
    t.createTdAppend('cj', a);
    t.td.colSpan = 3;
    t.td.style.paddingTop = '10px';
    if (t.rows() == 2) 
      ClientTile.loadClient(id);
  }
}
/**
 * ClientTile
 * Singleton: getInstance()
 */
ClientTile = {
  td:null,
  facesheet:null,
  client:null,
  addTile:null,
  existingTile:null,
  _state:null,  // tile state
  _TS_ADD:1,  
  _TS_ADD_LOADING:2,
  _TS_ADD_VERIFY:3,
  _TS_EXISTING:4,
  reset:function() {
    this.td = $('td-client2');
    this.addTile = new Tile('client-add');
    this._loadEntryForm();
    this.existingTile = new Tile('client-existing');
    this._setState(ClientTile._TS_ADD);
    this.facesheet = null;
    this.client = null;
  },
  getSelected:function() {
    var cid = (this.facesheet && this.facesheet.client) ? this.facesheet.client.id : null;
    return cid;
  },
  clearClient:function() {
    this.reset();
    this._setState(ClientTile._TS_ADD);
  },
  _setState:function(state) {
    this.state = state;
    switch (state) {
      case ClientTile._TS_ADD:
        Page.show(this.td, true);
        this.addTile.show(true);
        Page.visible($('client-clear-a'), false);
        this.existingTile.show(false);
        break;
      case ClientTile._TS_ADD_LOADING:
        this.addTile.working(true);
        break;
      case ClientTile._TS_ADD_VERIFY:
        this.addTile.working(false);
        Page.show(this.td, true);
        this.addTile.show(false);
        Page.visible($('client-clear-a'), true);
        this.existingTile.show(true);
        break;
      case ClientTile._TS_EXISTING:
        Page.show(this.td, true);
        this.addTile.show(false);
        Page.visible($('client-clear-a'), false);
        this.existingTile.show(true);
        break;
    }
  },
  showAdd:function() {
    this._setState(ClientTile._TS_ADD); 
  },
  loadThread:function(thread) {
    if (thread.clientId) {
      this._loadFacesheet(thread.facesheet);
      this._setState(ClientTile._TS_EXISTING);
    } else {
      this._setState(ClientTile._TS_HIDDEN);
    }
  },
  loadClient:function(cid) {
    if (cid) {
      this._setState(ClientTile._TS_ADD_LOADING);
      var self = this;
      Ajax.get(Ajax.SVR_MSG, 'getFacesheet', cid, function(facesheet) {
        self._loadFacesheet(facesheet);
        self._setState(ClientTile._TS_ADD_VERIFY);
      });
    }
  },
  popClientPicker:function() {
    var self = this;
    Includer.getPatientSelector_pop(function(client) {
      self.loadClient(client.id);
    });
  },
  editClient:function(popEdit) {
    var self = this;
    Includer.get(Includer.PATIENT_EDITOR, function() {
      PatientEditor.pop(self.client, popEdit, self);
    });
  },
  patientEditorCallback:function(client) {
    this.facesheet.client = client;
    this._loadFacesheet(this.facesheet);
  },
  editMeds:function() {
    Includer.getFaceMeds_pop(this.facesheet);
  },
  medsChangedCallback:function(facesheet) {
    this.facesheet.meds = facesheet.meds;
    this.facesheet.activeMeds = facesheet.activeMeds;
    this.facesheet.medsHistByMed = facesheet.medsHistByMed;
    this.facesheet.medsHistByDate = facesheet.medsHistByDate;
    this._loadFacesheet(this.facesheet);    
  },
  _loadFacesheet:function(facesheet) {
    if (facesheet) {
      var c = facesheet.client;
      setText('h2-client', c.name).className = c.sex;
      setText('client-uid', c.uid);
      setText('client-dob', c.birth + ' (' + c.age + ')');
      this._formatAddress('client-contact', c.shipAddress);
      //this._formatAddress('client-emer', c.emerAddress);
      this._formatAddress('client-rx', c.pharmAddress);
      setHtml('allergies', this._joinData(facesheet.allergies, 'agent', ' &bull; '));
      setHtml('meds', this._joinData(facesheet.activeMeds, 'name', '<br>'));
      this.client = c;
    }
    this.facesheet = facesheet;
    //page.setFacesheet(facesheet);
  },
  _formatAddress:function(id, a) {
    var e = $(id);
    var h = [];
    h.push(a.addr1);
    h.push(a.addr2);
    h.push(a.csz);
    if (a && a.name) {
      h.unshift(a.name);
    }
    h.push(AddressUi.formatPhone(a.phone1, a.phone1Type));
    h.push(AddressUi.formatPhone(a.phone2, a.phone2Type));
    var s = removeNullsFromArray(h).join('<br>');
    if (s == '') {
      e.innerHTML = '[None on file]';
      e.style.color = 'red';
    } else {
      e.innerHTML = s;
      e.style.color = '';
    }
  },
  _loadEntryForm:function() {
//    var ef = new EntryForm($('client-add-ul'));
//    ef.addLi();
//    var a = createAnchor(null, null, 'client', 'Select a Patient');
//    ef.appendClientPicker('cid', a);
//    var self = this;
//    ef.setOnChange(function(value, a){self.loadClient(value)});
//    return ef;
  },
  _formatVitals:function(vitals) {
    var v = null;
    for (var d in vitals) {
      v = vitals[d];
      break; 
    }
    if (v && v.all) {
      setText('h3-vitals', 'Vitals (' + v.dateText.substr(0, 6) + ')');
      setHtml('vitals', bulletJoin(v.all));
    } else {
      setText('h3-vitals', 'Vitals');
      setHtml('vitals', '');
    }
  },
  _joinData:function(a, field, glue) {
    var text;
    if (a) {
      var v = [];
      for (var i = 0; i < a.length; i++) {
        v.push(a[i][field]);
      }
      text = v.join(glue);
    } else {
      text = '(None)';
    }
    return text;
  }
}
/**
 * Assign global instance
 */
var page = ErxPharmPage;  

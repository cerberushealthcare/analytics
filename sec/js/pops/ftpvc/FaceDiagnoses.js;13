/**
 * Facesheet Diagnoses
 * Global static 
 * Requires: TableLoader.js, facesheet.css
 */
var FaceDiagnoses = {
  fs:null,
  changed:null,
  _scb:null,
  _POP:'fsp-dia',  
  /*
   * callback(facesheet) if anything changed (calls page.diagnosesChangedCallback by default)
   */
  pop:function(fs, zoom, callback) {
    overlayWorking(true);
    this.fs = fs;
    this.changed = false;
    this._scb = Ajax.buildScopedCallback(denull(callback, 'diagnosesChangedCallback'));
    var self = this;
    Includer.get([Includer.HTML_FACE_DIAGNOSES, Includer.AP_TEMPLATE_POPS], function() {
      new TabBar(FaceDiagnoses._POP, ['Current Diagnoses', 'Documented History'], ['Current', 'History']);
      if (fs.client) {
        Pop.setCaption('fsp-dia-cap-text', fs.client.name + ' - Diagnoses');
        Pop.setCaption("pop-de-cap-text", fs.client.name + " - Diagnosis Entry");
      }
      self._load();
      overlayWorking(false);
      if (zoom) {
        Pop.zoom(FaceDiagnoses._POP);
      } else {
        Pop.show(FaceDiagnoses._POP);
      }
    });
  },
  update:function(fs) {
    this.fs.cuTimestamp = fs.cuTimestamp;
    this.fs.diagnoses = fs.diagnoses;
    this.fs.diagnosesHistory = fs.diagnosesHistory;
    this.changed = true;
    this._load();
  },
  fpClose:function() {
    Pop.close();
    if (this.changed) {
      Ajax.callScopedCallback(this._scb, this.fs);
    }    
  },
  fpEdit:function(diagnosis) {
    FaceDiagEntry.pop(diagnosis);
  },
  fpDeleteChecked:function() {
    var checks = getCheckedValues('sel-dia', 'fsp-dia-tbody'); 
    var self = this;
    if (checks.length > 0) {
      Pop.Confirm.showDeleteChecked('remove', function(confirm) {
        if (confirm) {
          overlayWorking(true);
          Ajax.post(Ajax.SVR_POP, 'deactivateDiagnoses', checks, 
            function(fs) {
              self.update(fs);
              overlayWorking(false);
            });
        }
      });  
    } else {
      Pop.Msg.showCritical('Nothing was selected.');
    }
  },
  //
  _load:function() {
    var fs = this.fs;
    setDisabled('dia-cmd-toggle', fs.diagnoses == null);
    var tp = new TableLoader('fsp-dia-tbody', 'off', 'fsp-dia-div');
    tp.defineFilterFn(
      function(diagnosis) {
        return {'Show':get(diagnosis, '_status')}
      });
    var self = this;
    if (fs.diagnoses) {
      var i, diagnosis, cls;
      for (i = 0; i < fs.diagnoses.length; i++) {
        diagnosis = fs.diagnoses[i];
        tp.createTr(null, null, diagnosis);
        tp.createTdAppend('check', createCheckbox('sel-dia', diagnosis.id));
        cls = (diagnosis.active) ? 'fs' : 'fsi';
        tp.createTdAppend(null, createA(cls, diagnosis._name, iife(FaceDiagnoses.fpEdit, diagnosis)));
        tp.createTd(null, diagnosis._status);
        tp.createTd('nw', dashJoin([diagnosis.date, diagnosis.dateClosed], true));
      }
      tp.loadFilterTopbar('dia-filter-ul');
      if (fs.diagnosesHistory) {
        t = new TableLoader('fsp-diah-tbody', 'off', 'fsp-diah-div');
        t.defineFilterFn(
          function(diagnosis) {
            return {'Show':get(diagnosis, 'text')}
          });
        for (i = 0; i < fs.diagnosesHistory.length; i++) {
          diagnosis = fs.diagnosesHistory[i];
          t.createTr(diagnosis.date + diagnosis.sessionId, [diagnosis.date, diagnosis.sessionId], diagnosis);
          t.createTd('histbreak', diagnosis.date);
          t.createTdAppend(null, FaceUi.createSessionAnchor(fs, diagnosis.sessionId));
          t.createTd(null, null, diagnosis.text);
        }
        t.loadFilterTopbar('diah-filter-ul');
      }
    } else {
      tp.createTrTd(null, null, '&nbsp;');
      tp.td.colSpan = 4;
    }
    flicker("diah-head");
  }
};
/**
 * Diagnosis Entry
 */
FaceDiagEntry = {
  fs:null,
  form:null,
  diagnosis:null,
  //
  pop:function(diagnosis) {
    var fs = FaceUi.setParentage(FaceDiagnoses, this);
    this.diagnosis = diagnosis;
    this._load();
    var self = this;
    Includer.getWorking([Includer.AP_ICD_POP, Includer.JS_ICD_POP], function() {
      Pop.show('pop-de');
      self.form.focus('text');
    });
  },
  isDirty:function() {
    return (this.form && this.form.isRecordChanged());
  },
  fpSave:function() {
    Page.workingCmd(true);
    var self = this;
    Ajax.Facesheet.Diagnoses.save(this.form.getRecord(), 
      function(fs) {
        Page.workingCmd(false);
        self.parent.update(fs);
        Pop.close();
      });
  },
  fpDelete:function() {
    var self = this;
    Pop.Confirm.showYesNo('Are you sure you want to remove this record?', function() {
      overlayWorking(true);
      Ajax.Facesheet.Diagnoses.remove(self.diagnosis.dataDiagnosesId, 
        function(fs) {
          overlayWorking(false);
          self.parent.update(fs);
          Pop.close();
        });
    });
  },
  fpClose:function() {
    Pop.Confirm.closeCheckDirty(this, this.fpSave);
  },
  fpLookupIcd:function(fid) {
    var self = this;
    showIcd(null, this.form.getValue(fid), 
      function(code, desc) {
        if (code) {
          self.form.setValue('icd', code);
          self.form.setValue('text', desc);
        }
      });
  },
  //
  _load:function() {
    if (this.diagnosis == null)
      this.diagnosis = this._newDiagnosis();
    var ef = new EntryForm($('pop-de-form'));
    ef.li('Date').date('date').lbl('Status').select('status', C_Diagnosis.STATUSES, null, iife(this._statusChange, null, this)).startSpan('spanEndDate').lbl('on', '').date('dateClosed').endSpan();
    ef.li('Description', 'mt15').textbox('text', 60).append(this._createIcdLookup('text'));
    ef.li('ICD').textbox('icd', 5).append(this._createIcdLookup('icd'));
    this.form = ef;
    this.form.setRecord(this.diagnosis);
    showIf(this.diagnosis, 'de-delete-span');
    this._statusChange();
  },
  _newDiagnosis:function() {
    return {
      'clientId':this.fs.client.clientId,
      'date':DateUi.getToday(),
      'status':C_Diagnosis.STATUS_ACTIVE};
  },
  _statusChange:function() {
    if (C_Diagnosis.ACTIVES[this.form.getValue('status')]) {
      hide('spanEndDate');
      if (this.diagnosis.dateClosed == null)
        this.form.setValue('dateClosed', null);  
    } else {
      show('spanEndDate');
      if (this.diagnosis.active)
        this.form.setValue('dateClosed', DateUi.getToday());  
    }
  },
  _createIcdLookup:function(fid) {
    return createA('find', 'Lookup...', iife(this.fpLookupIcd, fid, this), FaceDiagEntry);
  }
};
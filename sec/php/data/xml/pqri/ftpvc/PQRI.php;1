<?php
require_once 'php/data/xml/_XmlRec.php';
//
/**
 * PQRI (Clinical Quality Measures)
 * @author Warren Hornsby
 */
class PQRI {
  //
  /**
   * @param CmsReport $report
   * @return PqriSubmission
   */
  static function from($report) {
    $xml = PqriSubmission::from($report);
    return $xml;
  }
  static function asDate($date) {
    return date('m-d-Y', strtotime($date));
  }
}
class PqriSubmission extends XmlRec {
  public $_type = 'PQRI-REGISTRY';
  public $_option = 'PAYMENT';
  public $_version = '2.0';
  public $_xmlns_xsi = 'http://www.w3.org/2001/XMLSchema-instance';
  public $_xsi_noNamespaceSchemaLocation = 'Registry_Payment.xsd';
  public /*PqriFileAuditData*/ $file_audit_data;
  public /*PqriRegistry*/ $registry;
  public /*PqriMeasureGroup*/ $measure_group;
  //
  static function from($report) {
    $me = new static();
    $me->file_audit_data = PqriFileAuditData::from($report->UserGroup);
    $me->registry = PqriRegistry::asClicktate();
    //$me->measure_group = PqriMeasureGroup::
    return $me;
  }
}
class PqriFileAuditData extends XmlRec {
  public $create_date;
  public $create_time;
  public $create_by;
  public $version = '1.0';
  public $file_number;
  public $number_of_files;
  //
  static function from($UserGroup, $fileNumber = 1, $numberOfFiles = 1) {
    $me = new static();
    $me->create_date = date('m-d-Y');
    $me->create_time = date('H:i');
    $me->create_by = $UserGroup->name;
    $me->file_number = $fileNumber;
    $me->number_of_files = $numberOfFiles;
    return $me;
  }
}
class PqriRegistry extends XmlRec {
  public $registry_name = 'Clicktate';
  public $registry_id = '123456';
  public $submission_method;
  //
  static $SUBMISSION_METHODS = array(
    'A' => '12 months, 80%, 3 or more measures',
    'B' => '6 months, 80%, 3 or more measures',
    'C' => '12 months, 30 consecutive, measure group',
    'E' => '12 months, 80%, measure group',
    'F' => '6 months, 80%, measure group');
  //
  static function asClicktate($method = 'C') {
    $me = new static();
    $me->registry_name = 'Clicktate';
    $me->registry_id = '123456';  // TODO
    $me->submission_method = $method;
    return $me;
  }
}
class PqriMeasureGroup extends XmlRec {
  public $_ID;
  public /*PqriProvider*/ $provider;
  //
  static $IDS = array(
    'A' => 'Diabetes Melitis',
    'C' => 'CKD',
    'D' => 'Preventive Care',
    'E' => 'Perioperative Care',
    'F' => 'Rheumatoid Arthritis',
    'G' => 'Back Pain',
    'H' => 'CABG',
    'X' => 'Not Applicable'); 
  //
  static function asNotApplicable($provider) {
    $me = new self();
    $me->_ID = 'X';
    $me->provider = $provider;
  }
}
class PqriProvider extends XmlRec {
  public $npi;
  public $tin;
  public $waiver_signed;
  public $encounter_from_date;
  public $encounter_to_date;
  public /*PqriMeasure*/ $pqri_measure;
  //
  static function from($User, $from, $to, $waiverSigned = 'Y') {
    $me = new static();
    $me->npi = $User->npi;
    $me->tin = '123456';  // TODO
    $me->waiver_signed = $waiverSigned;
    $me->from = PQRI::asDate($from);
    $me->to = PQRI::asDate($$to);
    return $me;
  }
}
class PqriMeasure extends XmlRec {
  public $pqri_measure_number;
  public $eligible_instances;
  public $meets_performance_instances;
  public $performance_exclusion_instances;
  public $performance_not_met_instances;
  public $reporting_rate;
  public $performance_rate;
}
